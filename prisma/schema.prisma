// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int                 @id @default(autoincrement())
  email        String              @unique
  firstName    String
  lastName     String
  bio          String?
  day          Int
  month        Int
  year         Int
  profileUrl   String?
  isOnline     Boolean
  forUserId    UserIdAndFriendId[] @relation(name: "forUserId")
  forFriendId  UserIdAndFriendId[] @relation(name: "forFriendId")
  Chats        Chats[]             
}


model UserIdAndFriendId {
  id       Int     @id @default(autoincrement())
  userId   Int
  friendId Int
  user     User    @relation(name: "forUserId", fields: [userId], references: [id])
  friend   User    @relation(name: "forFriendId", fields: [friendId], references: [id])
  forChats Chats[]
}

model Chats {
  id                      Int               @id @default(autoincrement())
  userAndFriendRelationId Int
  chat                    String
  fromUserId              Int
  sendTime                String
  seen                    Boolean
  userIdAndFriendId       UserIdAndFriendId @relation(fields: [userAndFriendRelationId], references: [id])
  User                    User @relation(fields: [fromUserId], references: [id])
}
